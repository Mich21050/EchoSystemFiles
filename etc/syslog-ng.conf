@version: 3.2
#
# Syslog-ng configuration file, compatible with default Debian syslogd
# installation. Originally written by anonymous (I can't find his name)
# Revised, and rewrited by me (SZALAY Attila <sasa@debian.org>)

# First, set some global options.
options {
    long_hostnames(off);
    flush_lines(0);
    use_dns(no);
    use_fqdn(no);
    owner("root");
    group("root");
    perm(0640);
    stats_freq(0);
    mark_freq(0);
    bad_hostname("^gconfd$");
};

########################
# Sources
########################
# This is the default behavior of sysklogd package
# Logs may come from unix stream, but not from another machine.
#
source s_src {
    unix-dgram("/dev/log");
    internal();
    file("/proc/kmsg" program_override("kernel"));
};

########################
# Destinations
########################
# First some standard logfile
#
destination d_auth { file("/var/log/auth.log" suppress(5)); };
destination d_cron { file("/var/log/cron.log" suppress(5)); };
destination d_daemon { file("/var/log/daemon.log" suppress(5)); };
destination d_kern { file("/var/log/kern.log" suppress(5)); };
destination d_mail { file("/var/log/mail.log" suppress(5)); };
destination d_user { file("/var/log/user.log" suppress(5)); };

# This files are the log come from the mail subsystem.
#
destination d_mailinfo { file("/var/log/mail/mail.info" suppress(5)); };
destination d_mailwarn { file("/var/log/mail/mail.warn" suppress(5)); };
destination d_mailerr { file("/var/log/mail/mail.err" suppress(5)); };

# Logging for INN news system
#
destination d_newscrit { file("/var/log/news/news.crit" suppress(5)); };
destination d_newserr { file("/var/log/news/news.err" suppress(5)); };
destination d_newsnotice { file("/var/log/news/news.notice" suppress(5)); };

# Some `catch-all' logfiles.
#
destination d_debug { file("/var/log/debug" suppress(5)); };
destination d_error { file("/var/log/error" suppress(5)); };
destination d_messages {
    file("/var/log/messages"
        template("$YEAR$MONTH$DAY:$HOUR$MIN$SEC $MSGHDR$MSGONLY\n")
        template_escape(no)
        suppress(5)
    );
};

# The root's console.
#
destination d_console { usertty("root"); };

# Virtual console.
#
destination d_console_all { file("/dev/tty10" suppress(5)); };

# Device metrics
destination d_metrics { file("/var/log/metrics_generic"); };
destination d_high_priority_metrics { file("/var/log/metrics_high_priority"); };

# Bluetooth (bluez and bluetoothd) logs
destination d_bluetooth { file("/var/log/bluetooth.log"); };

# Crash dumptrace
destination d_dumptrace { file("/var/log/crash_dumptrace"); };

# The named pipe /dev/xconsole is for the nsole' utility.  To use it,
# you must invoke nsole' with the -file' option:
#
#    $ xconsole -file /dev/xconsole [...]
#
destination d_xconsole { pipe("/dev/xconsole"); };

# Debian only
destination d_ppp { file("/var/log/ppp.log" suppress(5)); };

########################
# Filters
########################
# Here's come the filter options. With this rules, we can set which
# message go where.

filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_error { level(err .. emerg) ; };
filter f_messages { level(debug .. emerg) and
                    not facility(auth,authpriv,cron,daemon,mail,news); };

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_kern { facility(kern) and not filter(f_debug); };
filter f_local { facility(local0, local1, local3, local4, local5,
                        local6, local7) and not filter(f_debug); };
filter f_mail { facility(mail) and not filter(f_debug); };
filter f_news { facility(news) and not filter(f_debug); };
filter f_user { facility(user) and not filter(f_debug); };

filter f_cnews { level(notice, err, crit) and facility(news); };

filter f_ppp { facility(local2) and not filter(f_debug); };
filter f_console { level(warn .. emerg); };

# Filters for device metric logs
filter f_metrics { facility(local7) and match("metric_generic" value(MESSAGE)); };
filter f_high_priority_metrics { facility(local7) and match("metric_high_priority" value(MESSAGE)); };
filter f_not_metrics { not filter(f_metrics) and not filter(f_high_priority_metrics); };

filter f_ntpd { facility(daemon) and match("ntpd" value(MSGHDR)); };

# Filters for bluetooth (bluetoothd and btmd-ng)
filter f_bluetooth {
    (facility(daemon) and match("bluetoothd" value(MSGHDR))) or
    (filter(f_local) and match("btmd" value (MSGHDR)));
};

# Filter for crash dumptrace
filter f_dumptrace { facility(local4) and match("dumptrace" value(MESSAGE)); };

########################
# Log paths
########################
log { source(s_src); filter(f_auth); destination(d_auth); };
log { source(s_src); filter(f_cron); destination(d_cron); };
log { source(s_src); filter(f_daemon); destination(d_daemon); };
log { source(s_src); filter(f_kern); destination(d_kern); };

log { source(s_src); filter(f_mail); destination(d_mail); };
#log { source(s_src); filter(f_mail); filter(f_info); destination(d_mailinfo); };
#log { source(s_src); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
#log { source(s_src); filter(f_mail); filter(f_err); destination(d_mailerr); };

log { source(s_src); filter(f_news); filter(f_crit); destination(d_newscrit); };
log { source(s_src); filter(f_news); filter(f_err); destination(d_newserr); };
log { source(s_src); filter(f_news); filter(f_notice); destination(d_newsnotice); };
#log { source(s_src); filter(f_cnews); destination(d_console_all); };

# By default, log most everything to messages.
log { source(s_src); filter(f_messages); filter(f_not_metrics); destination(d_messages); };

### Device Metrics Logging ###

# High-priority metrics logging
log { source(s_src); filter(f_high_priority_metrics); destination(d_high_priority_metrics); };

# Generic metrics logging
log { source(s_src); filter(f_metrics); destination(d_metrics); };

# Crash Dumptrace logging
log { source(s_src); filter(f_dumptrace); destination(d_dumptrace); };

# Bluetooth logging
log { source(s_src); filter(f_bluetooth); destination(d_bluetooth); destination(d_messages); };

log { source(s_src); filter(f_ntpd); destination(d_messages); };

